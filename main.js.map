{"version":3,"sources":["./src/app/components/sub-reddit-bar/sub-reddit-bar.component.ts","./src/app/components/sub-reddit-bar/sub-reddit-bar.component.html","./src/environments/environment.ts","./src/app/services/reddit-data.service.ts","./src/app/components/reddit-card/reddit-card.component.ts","./src/app/components/reddit-card/reddit-card.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home-page/home-page.component.ts","./src/app/components/home-page/home-page.component.html","./src/app/components/nav-menu/nav-menu.component.ts","./src/app/components/nav-menu/nav-menu.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sub-reddit-bar',\n  templateUrl: './sub-reddit-bar.component.html',\n  styleUrls: ['./sub-reddit-bar.component.css']\n})\nexport class SubRedditBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>sub-reddit-bar works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of} from 'rxjs';\r\nimport { Listing } from '../interfaces/listing';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PostDetails } from '../interfaces/post-details';\r\nimport { PostData } from '../interfaces/post-data';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RedditDataService {\r\n  listing: Listing;\r\n  posts: PostData[];\r\n  subreddit: string;\r\n\r\n  getPosts(): Observable<PostData[]> {\r\n    return of(this.posts);\r\n  }\r\n\r\n  getFirstPosts(): void {\r\n    this.http.get<Listing>(`https://www.reddit.com/r/${this.subreddit}/.json`).subscribe(x => \r\n    {\r\n      this.listing = x;\r\n      this.listing.data.children.forEach((value) => this.posts.push(value));\r\n    });\r\n  }\r\n\r\n  getNextPosts(): void {\r\n    this.http.get<Listing>(`https://www.reddit.com/r/${this.subreddit}/.json?after=${this.listing.data.after}`).subscribe(x => \r\n    {\r\n      this.listing = x;\r\n      this.listing.data.children.forEach((value) => this.posts.push(value));\r\n    });\r\n  }\r\n\r\n  changeReddit(reddit: string): void {\r\n    this.subreddit = reddit;\r\n    while(this.posts.length > 0) {this.posts.pop();}\r\n    this.getFirstPosts();\r\n  }\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.posts = [];\r\n    this.subreddit = 'aww';\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { PostDetails } from '../../interfaces/post-details';\n\n@Component({\n  selector: 'app-reddit-card',\n  templateUrl: './reddit-card.component.html',\n  styleUrls: ['./reddit-card.component.css']\n})\nexport class RedditCardComponent implements OnInit {\n  @Input() card: PostDetails;\n  flipped: boolean;\n  flipText: string;\n  constructor() {\n    this.flipped = false;\n    this.flipText = \"Flip to Thumbnail\";\n  }\n\n  ngOnInit(): void {\n  }\n\n  flip() {\n    this.flipped = !this.flipped;\n    this.flipText = `Flip to ${(this.flipped ? \"Post Title\" : \"Thumbnail\")}`\n  }\n\n}\n","<div *ngIf=\"!card.over_18\" class=\"scene\">\n    <div class=\"reddit-card\" [ngClass]=\"{'is-flipped': flipped}\">\n        <div class=\"reddit-card_face reddit-card_face--front\" [ngStyle]=\"{'background-image': 'url('+card.thumbnail+')'}\"></div>\n        <div class=\"reddit-card_face reddit-card_face--back\">{{card.title}}</div>\n    </div>\n    <div class=\"reddit-card-bottom\">\n        <a class=\"reddit-card-bottom-left reddit-card-bottom-button\" (click)=\"flip()\">{{flipText}}</a>\n        <a class=\"reddit-card-bottom-right reddit-card-bottom-button\" target=\"_blank\" [href]='\"https://www.reddit.com\" + card.permalink'>View on Reddit</a>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'VisualReddit';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { RedditCardComponent } from './components/reddit-card/reddit-card.component';\r\nimport { HomePageComponent } from './components/home-page/home-page.component';\r\nimport { NavMenuComponent } from './components/nav-menu/nav-menu.component';\r\nimport { SubRedditBarComponent } from './components/sub-reddit-bar/sub-reddit-bar.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RedditCardComponent,\r\n    HomePageComponent,\r\n    NavMenuComponent,\r\n    SubRedditBarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    InfiniteScrollModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RedditDataService } from '../../services/reddit-data.service';\r\nimport { PostData } from '../../interfaces/post-data';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.css']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n  allPosts: PostData[];\r\n  subreddit: string;\r\n\r\n  // All commented out code is for the intersection observer.\r\n  // That method requires a full scroll to the bottom to make\r\n  // the call to get more data. The ngx-infinite-scroll way does\r\n  // currently in use does not.\r\n  // npm install ngx-infinite-scroll\r\n\r\n  // observer: IntersectionObserver;\r\n  // target: Element;\r\n\r\n  // options = {\r\n  //   rootMargin: '0px',\r\n  //   threshold: 0\r\n  // }\r\n\r\n  // callback = (entries, observer) => {\r\n  //   this.nextPage();\r\n  // };\r\n\r\n  constructor(private data: RedditDataService) {\r\n    this.subreddit = this.data.subreddit;\r\n  }\r\n\r\n  subredditChange() {\r\n    this.data.changeReddit(this.subreddit);\r\n  }\r\n\r\n  nextPage() {\r\n    this.data.getNextPosts();\r\n  }\r\n\r\n  // createObserver() {\r\n  //   this.observer = new IntersectionObserver(this.callback, this.options);\r\n  //   this.observer.observe(this.target);\r\n  // }\r\n\r\n  ngOnInit(): void {\r\n    this.data.getPosts().subscribe(\r\n      x => this.allPosts = x\r\n    );\r\n    this.data.getFirstPosts();\r\n    // window.addEventListener(\"load\", (event) => {\r\n    //  this.target = document.getElementById('ScrollComponent');\r\n    //  this.createObserver();\r\n    // }, false);\r\n  }\r\n\r\n}\r\n","<div class=\"nav-bar\">\r\n    <div class=\"nav-bar-item\">\r\n        r/<input class=\"nav-bar-item\" [(ngModel)]=\"subreddit\" (change)=\"subredditChange()\" />\r\n    </div>\r\n</div>\r\n<div class=\"page-content\">\r\n    <div *ngIf=\"allPosts\" infiniteScroll [infiniteScrollDistance]=\"2\" [infiniteScrollThrottle]=\"50\" (scrolled)=\"nextPage()\">\r\n        <app-reddit-card *ngFor=\"let card of allPosts\" [card]=\"card.data\"></app-reddit-card>\r\n    </div>\r\n    <!--<div #ScrollComponent id=\"ScrollComponent\"></div>-->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>nav-menu works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomePageComponent } from './components/home-page/home-page.component';\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', component: HomePageComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}